version: "3.0"
services:
  # Laravel Backend
  laravel:
    build:
      context: ./laravel
      dockerfile: laravel.dockerfile
    image: laravel
    user: "1000:1000"
    container_name: laravel
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: laravel
      SERVICE_TAGS: dev
    working_dir: /var/www/html/
    volumes:
      - ./laravel:/var/www/html/
      - ./laravel/php/laravel.ini:/usr/local/etc/php/conf.d/laravel.ini
    networks:
      - app-network
  # Vue Frontend
  vue:
    stdin_open: true
    container_name: vue
    restart: always
    build:
      context: ./vue
      dockerfile: vue.dockerfile
    volumes:
      - ./vue:/app
      - /app/node_modules/
    networks:
      - app-network
    environment:
      - CHOKIDAR_USEPOLLING=true
    expose:
      - "80"
    ports:
      - "8080:8080"
      - "8081:8081"
  # Nginx
  webserver:
    depends_on:
      - laravel
      - vue
    build:
      context: ./laravel/nginx
      dockerfile: nginx.dockerfile
    container_name: nginx
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
    networks:
      - app-network
  # Mysql
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - "33061:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - databasevolume:/var/lib/mysql
    networks:
      - app-network
  # Redis
  redis:
    image: "redis"
    container_name: redis
    command: redis-server
    ports:
      - "6379:6397"
    volumes:
      - ./redis/data:/data
      - ./redis/conf:/usr/local/etc/redis/redis.conf
    networks:
      - app-network
  # Mailhog
  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - app-network
# Networks
networks:
  app-network:
    driver: bridge

# Volumes
volumes:
  databasevolume:
